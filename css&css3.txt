1、opacity   filter                    
   opacity：css3，兼容IE9+
   filter: Alpha(opacity=50)，兼容IE8及以下浏览器，等价于 opacity:0.5

2、alpha   opacity
   alpha：alpha通道对元素设定透明度时，可以单独针对元素背景色和文字颜色等来指定透明度,只要设置了颜色的地方都可以使用
   opacity：opacity属性只能指定整个元素的透明度

3、outline   outline-offset
   outline：
   css2 ，轮廓线不会占据空间，也不一定是矩形
   outline是简写属性，分开写则是以下三个属性，顺序可以调换
      outline-color    默认黑色
      outline-style    若省略，浏览器不绘制
      outline-width    属性值可为：npx thin medium thick 默认是medium 

   outline-offset：
   css3 , IE不支持
   偏移border的距离，当前IE(当前最高是IE11)都不支持
   属性值可为正负值，负值表示轮郭线向内偏移，绘制在边框内部

4、transition与animation       
   css3  IE9及以下不兼容
   transition  
      transition-property  必须
      transition-duration  必须
      transition-timing-function
      transition-delay
   只能指定属性的开始值和结束值，以平滑过渡的方式来实现动画效果，不能实现复杂的动画效果

   animation  
     animation-name       必须
     animation-duration   必须
     animation-timing-function
     animation-delay
     animation-iteration-count
     animation-direction
   通过设置关键帧来实现复杂的动画效果，其实现原理上可简单理解为由多个transition构成的动画，transition可简单理解为animation的一帧动画

5、px、em、rem  
   都是相对长度单位  
   px：  
       是相对于显示器屏幕分辨率而言的。(CSS2.0) 
   em： 
       相对于当前对象内文本的字体尺寸，如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸(16px);
       其会继承父级元素的字体大小，注意避免1.2*1.2 = 1.44em的情况。
   rem：
       是css3新增的相对单位，与em区别在于rem是相对于html根元素，兼容IE9+;
       关于rem,大多数人都这么用：
       html {
          font-size: 62.5%; /* 62.5% of 1em (16px) = 10px = 1rem*/
       }
       body {          
          font-size: 1.6rem; /* Font-sizing with rem unit */
       }
      IE9+则计算有误差，1rem = 9.93px，并非10px
      而chrome下，1rem = 12px，因为chrome支持最小的字体为12px，无法设置10px的字体。    
      解决方法：增大基础值的倍数
      html {
          font-size: 625%;
      }
      body {
          font-size: 0.16rem;
      }
  
6、Flex布局(弹性布局)
   IE10及以上才兼容，用在移动端是没有问题的
   参考：http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html
   display：flex;
   display: -webkit-flex; /* Safari */

   采用Flex布局的元素，称为Flex容器（flex container），简称"容器"。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称"项目"。

   6个属性设置在容器上:
   flex-direction: row | row-reverse | column | column-reverse; 项目的排列方向

   flex-wrap: nowrap | wrap | wrap-reverse;                     项目的换行方式

   flex-flow: flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap

   justify-content: flex-start | flex-end | center | space-between | space-around; 项目在水平轴上的对齐方式

   align-items: flex-start | flex-end | center | baseline | stretch;     项目在垂直轴上的对齐方式

   align-content: flex-start | flex-end | center | space-between | space-around | stretch; 多根水平轴线在垂直方向的对齐方式。   

   6个属性设置在项目上:
   order: <integer>;项目的排列顺序。数值越小，排列越靠前，默认为0。

   flex-grow: <number>; /* default 0 */  项目的放大比例，默认为0

   flex-shrink: <number>; /* default 1 */ 项目的缩小比例，默认为1 ，负值对该属性无效。

   flex-basis: <length> | auto; /* default auto */ 项目占据的主轴空间

   flex: flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。
   该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。

   align-self: auto | flex-start | flex-end | center | baseline | stretch;
   允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。






